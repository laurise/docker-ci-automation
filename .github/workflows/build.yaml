---
name: ci

on:
  push:
    branches:
      - main
  pull_request:

env:
  REGISTRY_IMAGE: laurise/docker-ci-automation

jobs:
  build-test-image:
    name: Build test image
    runs-on: ubuntu-latest

    permissions:
      packages: write

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push to GitHub Container Registry
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ghcr.io/${{ env.REGISTRY_IMAGE }}:${{ github.run_id }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

  scan-image:
    name: Scan image
    needs: [ build-test-image ]
    runs-on: ubuntu-latest

    permissions:
      actions: read
      contents: read
      packages: read
      security-events: write

    steps:
      - name: Checkout git repository
        uses: actions/checkout@v3

      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull image to scan
        run: docker pull ghcr.io/${{ env.REGISTRY_IMAGE }}:"$GITHUB_RUN_ID"

      # Scan for CVEs (Common Vulnerabilities and Exposures)
      - name: Run Trivy for CVEs and report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/${{ env.REGISTRY_IMAGE }}:${{ github.run_id }}
          exit-code: 1
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'HIGH,CRITICAL'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  build-final-image:
    name: Build final image
    needs: [ scan-image ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - linux/amd64
          # - linux/arm64
          # - linux/arm/v7

    steps:
      - name: Checkout Git repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          flavor: |
            latest=false
          tags: |
            type=raw,value=1.0.0,enable={{is_default_branch}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v4
        with:
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: ${{ matrix.platform }}
